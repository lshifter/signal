import random
from fastapi import FastAPI, File, UploadFile, Form
from fastapi.middleware.cors import CORSMiddleware

app = FastAPI()
app.add_middleware(
    CORSMiddleware,
    allow_origins=["*"],  # –¥–ª—è —Ä–µ–ª–∏–∑–∞ —É–∫–∞–∂–∏ –¥–æ–º–µ–Ω —Ñ—Ä–æ–Ω—Ç–∞!
    allow_methods=["*"],
    allow_headers=["*"],
)

DISCLAIMER = (
    "‚ö†Ô∏è –ë–æ—Ç –º–æ–∂–µ—Ç –≤—ã–¥–∞—Ç—å –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Å–∏–≥–Ω–∞–ª. –ó–∞–≥—Ä—É–∂–∞–π—Ç–µ –∞–∫—Ç—É–∞–ª—å–Ω—ã–π —Å–∫—Ä–∏–Ω—à–æ—Ç —Å –∏–≥—Ä—ã!\n"
    "–®–∞–Ω—Å –≤—ã–∏–≥—Ä—ã—à–∞ 86%. –ú—ã —Ä–∞–±–æ—Ç–∞–µ–º —á–µ—Å—Ç–Ω–æ, –Ω–æ –ø–æ–º–Ω–∏ –æ —Ä–∏—Å–∫–∞—Ö. "
    "–í—Å–µ —Ä–µ—à–µ–Ω–∏—è –ø—Ä–∏–Ω–∏–º–∞–µ—à—å —Ç—ã —Å–∞–º. –ù–µ –Ω–∞—Ä—É—à–∞–π –∑–∞–∫–æ–Ω—ã —Å–≤–æ–µ–π —Å—Ç—Ä–∞–Ω—ã!"
)

def generate_aviator_signal():
    n = random.randint(10, 50)
    coeffs = []
    last = 1.2
    for i in range(n):
        if i % 5 == 0 and i != 0:
            last = round(last + 0.1, 2)
        coeffs.append(f"–ó–∞–±–µ—Ä–∏ –Ω–∞ x{last}")
    coeffs_text = "<br>".join(f"‚Ä¢ {x}" for x in coeffs[:10])
    return (
        f"‚úàÔ∏è <b>–°–∏–≥–Ω–∞–ª –¥–ª—è Aviator</b><br>"
        f"1Ô∏è‚É£ –°–¥–µ–ª–∞–π {n} –∏–≥—Ä —Å –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–º –¥–µ–ø–æ–∑–∏—Ç–æ–º<br>"
        f"2Ô∏è‚É£ –í –∫–∞–∂–¥–æ–π –∏–≥—Ä–µ –∑–∞–±–∏—Ä–∞–π –Ω–∞ –Ω–∏–∑–∫–∏—Ö –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç–∞—Ö:<br>{coeffs_text}<br>"
        f"3Ô∏è‚É£ –ü–æ—Å–ª–µ –≤—ã–∏–≥—Ä—ã—à–∞ ‚Äî —Å—Ç–æ–ø<br><br>"
        f"{DISCLAIMER}"
    )

def generate_chicken_signal():
    jumps = random.randint(6, 9)
    attempts = random.randint(10, 30)
    return (
        f"üêî <b>–°–∏–≥–Ω–∞–ª –¥–ª—è Checken Road</b><br>"
        f"1Ô∏è‚É£ –°–¥–µ–ª–∞–π {attempts} –∑–∞—Ö–æ–¥–æ–≤ –ø–æ –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–π —Å—Ç–∞–≤–∫–µ<br>"
        f"2Ô∏è‚É£ –í –∫–∞–∂–¥–æ–º –∑–∞—Ö–æ–¥–µ –¥–µ–ª–∞–π —Ä–æ–≤–Ω–æ {jumps} –ø—Ä—ã–∂–∫–æ–≤ (—ç—Ç–æ –±–µ–∑–æ–ø–∞—Å–Ω–∞—è —Å—Ç—Ä–∞—Ç–µ–≥–∏—è)<br>"
        f"3Ô∏è‚É£ –ö–∞–∫ —Ç–æ–ª—å–∫–æ —Å–ª–æ–≤–∏–ª –≤—ã–∏–≥—Ä—ã—à ‚Äî –æ—Å—Ç–∞–Ω–æ–≤–∏—Å—å!<br><br>"
        f"{DISCLAIMER}"
    )

@app.post("/analyze/")
async def analyze(file: UploadFile = File(...), game: str = Form(...)):
    # –ú–æ–∂–Ω–æ –¥–∞–∂–µ –Ω–µ —á–∏—Ç–∞—Ç—å —Ñ–∞–π–ª, –ø—Ä–æ—Å—Ç–æ –≤–µ—Ä–Ω—É—Ç—å —Å–∏–≥–Ω–∞–ª
    if game == "Checken Road":
        signal = generate_chicken_signal()
    elif game == "Aviator":
        signal = generate_aviator_signal()
    else:
        signal = "–û—à–∏–±–∫–∞: –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∏–≥—Ä–∞."
    return {"signal": signal}

